成績アナリティクス - 落第生

これはcodecheckのチャレンジです。 初めての方はまずチュートリアルをご覧ください。

C大学では毎学期末、学生の評価が客観的で公正となるように、期末試験の成績に対して調査を行っています。
その結果を各教授が担当科目における指導と評価の参考としたり、
学生の成績があまりにも偏っている場合は成績調整も行なっています。

この処理を正確かつ円滑にするため、 期末試験の成績データを解析・調整するアプリケーションを作成しなければなりません。
なんと、准教授のあなたはその作成を学校長に任されてしまいました。
ザ・ミッション

成績データを解析して、次の項目を出力するCLIアプリケーションを実装してください。

    dropouts - 49点以下を落第とした場合、2科目以上で落第になったすべての学生を出力してください。
    top-vs-bottom - 各学生の全科目の平均点を求め、最高平均点と最低平均点を取った学生を出力してください。

実装について
成績データの構造

    成績データは7列のCSVファイルとして記録されている
    1行目は、ヘッダとして
    ID,Mathmatics,Science,English,Japanese,History,Geography
    と記録されている
    上記ヘッダに準じて、1列目は学生番号、2列目以降は各科目の点数が記録されている
    学生たちの成績が2行目以降に記録されている
    各科目の点数は0から100の整数である
    CSVファイルは input/ においてある

CLI

結果を標準出力に表示するCLIアプリケーションとして実装してください。 詳細については[指定言語].mdを参照してください。
入力ルール

    CLIアプリケーションは2つの引数を受け取る
    第1引数は出力する項目の名称であり、文字列である
    第2引数はファイル名である
    全ての引数は必須である
    引数に不正な値が与えられることはない
        存在する項目の文字列が必ず渡される
        指定するファイルは必ず存在し、そのファイル内容も必ず指定の構造で記録されている

出力ルール

dropouts:

    出力は1列(学生番号ID)のCSV形式とする
    1行目は、ヘッダとしてIDを出力する
    学生番号を2行目以降に昇順に出力する

top-vs-bottom:

    出力は2列のCSV形式とする
    1行目は、ヘッダとしてID,Meanを出力する
    上記ヘッダに準じて、１列目は学生番号、２列目は各学生の平均点を出力する
    学生番号と平均点を2行目以降に出力する
    最高平均点、最低平均点の順に出力する。
    平均点は小数点以下第3位で四捨五入し、小数点以下2桁まで出力する
    同点の学生がいた場合、同点学生を学生番号の昇順に出力する

入出力例

dropouts:

$ ./student-grades dropouts input/0.csv
ID
A0003
A0004
A0011
A0013
A0015

top-vs-bottom:

$ ./student-grades top-vs-bottom input/0.csv
ID,Mean
A0013,27.17
A0010,87.83

期待する入出力は test/ ディレクトリにいくつか定義されています。
CLIアプリケーションを作成する際の参考にしてください。
answer.md

answer.mdが用意されています。その中に

    どのように実装したか、工夫した点は何か
    発生した問題、難しかった箇所
    それをどのようにして対処したのか

等を書いてください。
